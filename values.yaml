# Default values for ..
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: lakhansamani/authorizer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
   drop:
   - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534 # nobody user

service:
  type: ClusterIP
  port: 8080

resources: {}
  # limits:
  #   cpu: 500m
  #   memory: 512Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}
tolerations: []
affinity: {}

# Add any extra configuration you need here.
# https://docs.authorizer.dev/core/env
extraEnv: []
  # - name: "ENV"
  #   value: "production"


authorizer:

  # Redis URL where sessions can be persisted
  # (if not set k8s will create redis instance with 2Gi volume)
  redis_url: null

  # Which database you are using. Supported database
  # types are postgres, mysql, planetscale, sqlite, sqlserver,
  # mongodb, arangodb, yugabyte, mariadb, cassandradb, scylladb, dynamodb
  database_type: null

  # Database connection string. In case of cluster url eg. for
  # cassandra db, you can use comma separated IPs.
  database_url: null

  # AWS region. In case of dynamodb database_type
  aws_region: null

  # AWS access key identifier. In case of dynamodb database_type
  aws_access_key_id: null

  # AWS secret access key. In case of dynamodb database_type
  aws_secret_access_key: null




